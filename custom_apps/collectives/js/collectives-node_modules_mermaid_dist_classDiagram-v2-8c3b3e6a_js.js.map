{"version":3,"file":"collectives-node_modules_mermaid_dist_classDiagram-v2-8c3b3e6a_js.js?v=94f71cf83d2e29a812f2","mappings":"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","sources":["webpack:///collectives/node_modules/mermaid/dist/classDiagram-v2-8c3b3e6a.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-88ad4441.js\";\nimport { select, curveLinear } from \"d3\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { l as log, c as getConfig, u as utils, p as setupGraphViewbox, o as interpolateToCurve, k as getStylesFromArray, e as common } from \"./mermaid-a98f434b.js\";\nimport { r as render } from \"./index-4c4adb72.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-b00f0ec2.js\";\nimport \"./createText-285e50b4.js\";\nimport \"mdast-util-from-markdown\";\nimport \"./svgDraw-5d8a058e.js\";\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\nlet conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nconst addNamespaces = function(namespaces, g, _id, diagObj) {\n  const keys = Object.keys(namespaces);\n  log.info(\"keys:\", keys);\n  log.info(namespaces);\n  keys.forEach(function(id) {\n    var _a, _b;\n    const vertex = namespaces[id];\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    log.info(\"setNode\", node);\n  });\n};\nconst addClasses = function(classes, g, _id, diagObj, parent) {\n  const keys = Object.keys(classes);\n  log.info(\"keys:\", keys);\n  log.info(classes);\n  keys.filter((id) => classes[id].parent == parent).forEach(function(id) {\n    var _a, _b;\n    const vertex = classes[id];\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    log.info(\"setNode\", node);\n  });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    var _a, _b;\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !(vertex.class in classes)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n};\nconst addRelations = function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    var _a;\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: \"id\" + cnt,\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2 == null ? void 0 : conf2.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles2 = getStylesFromArray(edge.style);\n      edgeData.style = styles2.style;\n      edgeData.labelStyle = styles2.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (((_a = getConfig().flowchart) == null ? void 0 : _a.htmlLabels) ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\nconst setConf = function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n  const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils.insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n  if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n};\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["sanitizeText","txt","conf","dividerMargin","padding","textHeight","curve","addClasses","classes","g","_id","diagObj","parent","keys","Object","l","info","filter","id","forEach","_a","_b","vertex","cssClassStr","cssClasses","join","styles2","vertexText","label","node","labelStyle","shape","labelText","classData","rx","ry","class","style","domId","tooltip","db","getTooltip","haveCallback","link","width","type","flowchart","setNode","setParent","getArrowMarker","marker","renderer","setConf","cnf","draw","async","text","_version","conf2","securityLevel","nodeSpacing","rankSpacing","multigraph","compound","setGraph","rankdir","getDirection","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","namespaces","getNamespaces","getClasses","relations","getRelations","notes","getNotes","sandboxElement","addNamespaces","cnt","edge","edgeData","pattern","relation","lineType","arrowhead","startLabelRight","relationTitle1","endLabelLeft","relationTitle2","arrowTypeStart","type1","arrowTypeEnd","type2","title","arrowheadStyle","labelpos","htmlLabels","labelType","replace","lineBreakRegex","setEdge","id1","id2","addRelations","startEdgeId","note","i","noteData","edgeId","addNotes","length","root","nodes","contentDocument","body","svg","select","element","r","u","insertTitle","titleTopMargin","getDiagramTitle","diagramPadding","useMaxWidth","doc","document","labels","querySelectorAll","dim","getBBox","rect","createElementNS","setAttribute","height","insertBefore","firstChild","diagram","parser","styles","init","arrowMarkerAbsolute","d","clear"],"sourceRoot":""}