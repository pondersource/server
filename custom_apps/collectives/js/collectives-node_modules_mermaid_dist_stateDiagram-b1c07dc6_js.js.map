{"version":3,"file":"collectives-node_modules_mermaid_dist_stateDiagram-b1c07dc6_js.js?v=febeb0972685f3374535","mappings":"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","sources":["webpack:///collectives/node_modules/mermaid/dist/stateDiagram-b1c07dc6.js"],"sourcesContent":["import { d as db, p as parser, s as styles } from \"./styles-f626f8de.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { c as getConfig, u as utils, e as common, l as log, i as configureSvgSize } from \"./mermaid-a98f434b.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst idCache = {};\nconst set = (key, val) => {\n  idCache[key] = val;\n};\nconst get = (k) => idCache[k];\nconst keys = () => Object.keys(idCache);\nconst size = () => keys().length;\nconst idCache$1 = {\n  get,\n  set,\n  keys,\n  size\n};\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\nconst drawSimpleState = (g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n};\nconst drawDescrState = (g, stateDef) => {\n  const addTspan = function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  };\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc)\n    ;\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst drawEndState = (g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n};\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\nconst drawNote = (text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n};\nconst drawState = function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  idCache$1.set(id, stateInfo);\n  return stateInfo;\n};\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case db.relationType.EXTENSION:\n        return \"extension\";\n      case db.relationType.COMPOSITION:\n        return \"composition\";\n      case db.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils.calcLabelPosition(path.points);\n    const rows = common.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n      log.info(boundstmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n};\nlet conf;\nconst transformationLog = {};\nconst setConf = function() {\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram2, stateDef);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n};\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["idCache","idCache$1","key","val","drawDescrState","g","stateDef","titleBox","append","attr","state","padding","textHeight","fontSize","text","descriptions","node","getBBox","titleHeight","height","description","dividerMargin","isFirst","isSecond","forEach","descr","textEl","txt","isFirst2","tSpan","addTspan","descrLine","descrBox","width","Math","max","insert","radius","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","title","titleShift","id","titleWidth","startX","graphBox","doc","abs","lineY","drawNote","note","rectElem","textWidth","_text","y","textElem","style","replace","lines","split","lineBreakRegex","tHeight","noteMargin","line2","trim","length","span","_drawLongText","drawState","elem","stateInfo","label","type","sizeUnit","drawStartState","miniPadding","drawEndState","forkWidth","forkHeight","parentId","tmp","drawForkJoinState","drawDivider","classBox","drawSimpleState","stateBox","edgeCount","conf","transformationLog","renderDoc","diagram2","root","domDocument","diagObj","graph","compound","multigraph","i","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","db","extract","states","getStates","relations","getRelations","keys2","Object","keys","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","l","debug","nodeCount","cnt","relation","setEdge","id1","id2","fontSizeFactor","labelHeight","getRows","labelpos","nodes","svgElem","v","warn","JSON","stringify","select","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","Number","isNaN","setAttribute","edges","e","edge","w","path","points","filter","p","lineData","lineFunction","d","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","getRelationType","u","calcLabelPosition","rows","titleRows","maxWidth","minX","boundstmp","min","info","push","boxHeight","heightAdj","bounds","drawEdge","renderer","setConf","draw","_version","securityLevel","sandboxElement","contentDocument","body","document","rootDoc","getRootDoc","svgWidth","useMaxWidth","diagram","parser","styles","init","cnf","clear"],"sourceRoot":""}